import React from 'react';
import {
  Box,
  Typography,
  ImageList,
  ImageListItem,
  Paper,
  Grid,
  Divider,
  Chip,
} from '@mui/material';
import { Profile } from '../types';
import { serviceTranslations } from '../utils/serviceTranslations';

interface ProfileViewProps {
  profile: Profile;
}

const ProfileImage = ({ src, alt, loading }: { src: string; alt: string; loading?: 'lazy' | 'eager' }) => (
  <img
    src={src}
    alt={alt}
    loading={loading}
    style={{
      width: '100%',
      height: '100%',
      objectFit: 'cover',
      borderRadius: '8px',
    }}
  />
);

const ProfileView: React.FC<ProfileViewProps> = ({ profile }) => {
  const services = JSON.parse(profile.services || '[]');
  const photos = JSON.parse(profile.photos || '[]');

  return (
    <Paper elevation={3} sx={{ p: 3 }}>
      <Grid container spacing={3}>
        {/* –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ */}
        <Grid item xs={12}>
          <Typography variant="h6" gutterBottom>
            –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
          </Typography>
          <ImageList cols={2} gap={16}>
            {photos.map((photo: string, index: number) => (
              <ImageListItem key={index}>
                <ProfileImage
                  src={photo}
                  alt={`–§–æ—Ç–æ ${index + 1}`}
                  loading="lazy"
                />
              </ImageListItem>
            ))}
          </ImageList>
        </Grid>

        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <Grid item xs={12}>
          <Divider sx={{ my: 2 }} />
          <Typography variant="h6" gutterBottom>
            –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
          </Typography>
          <Grid container spacing={2}>
            <Grid item xs={12} sm={6}>
              <Typography variant="subtitle1">
                <strong>–ò–º—è:</strong> {profile.name}
              </Typography>
            </Grid>
            <Grid item xs={12} sm={6}>
              <Typography variant="subtitle1">
                <strong>–í–æ–∑—Ä–∞—Å—Ç:</strong> {profile.age} –ª–µ—Ç
              </Typography>
            </Grid>
            <Grid item xs={12} sm={6}>
              <Typography variant="subtitle1">
                <strong>–†–æ—Å—Ç:</strong> {profile.height} —Å–º
              </Typography>
            </Grid>
            <Grid item xs={12} sm={6}>
              <Typography variant="subtitle1">
                <strong>–í–µ—Å:</strong> {profile.weight} –∫–≥
              </Typography>
            </Grid>
            <Grid item xs={12} sm={6}>
              <Typography variant="subtitle1">
                <strong>–†–∞–∑–º–µ—Ä –≥—Ä—É–¥–∏:</strong> {profile.breastSize}
              </Typography>
            </Grid>
            <Grid item xs={12} sm={6}>
              <Typography variant="subtitle1">
                <strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {profile.phone}
              </Typography>
            </Grid>
          </Grid>
        </Grid>

        {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
        <Grid item xs={12}>
          <Divider sx={{ my: 2 }} />
          <Typography variant="h6" gutterBottom>
            –û–ø–∏—Å–∞–Ω–∏–µ
          </Typography>
          <Typography variant="body1">
            {profile.description}
          </Typography>
        </Grid>

        {/* –£—Å–ª—É–≥–∏ */}
        <Grid item xs={12}>
          <Divider sx={{ my: 2 }} />
          <Typography variant="h6" gutterBottom>
            –£—Å–ª—É–≥–∏
          </Typography>
          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>
            {services.map((service: string) => (
              <Chip
                key={service}
                label={serviceTranslations[service] || service}
                color="primary"
                variant="outlined"
              />
            ))}
          </Box>
        </Grid>

        {/* –¶–µ–Ω—ã */}
        <Grid item xs={12}>
          <Divider sx={{ my: 2 }} />
          <Typography variant="h6" gutterBottom>
            –¶–µ–Ω—ã
          </Typography>
          <Grid container spacing={2}>
            {profile.priceExpress > 0 && (
              <Grid item xs={12} sm={6} md={3}>
                <Typography variant="subtitle1">
                  <strong>–≠–∫—Å–ø—Ä–µ—Å—Å:</strong> {profile.priceExpress} ‚ÇΩ
                </Typography>
              </Grid>
            )}
            <Grid item xs={12} sm={6} md={3}>
              <Typography variant="subtitle1">
                <strong>1 —á–∞—Å:</strong> {profile.price1Hour} ‚ÇΩ
              </Typography>
            </Grid>
            <Grid item xs={12} sm={6} md={3}>
              <Typography variant="subtitle1">
                <strong>2 —á–∞—Å–∞:</strong> {profile.price2Hours} ‚ÇΩ
              </Typography>
            </Grid>
            <Grid item xs={12} sm={6} md={3}>
              <Typography variant="subtitle1">
                <strong>–ù–æ—á—å:</strong> {profile.priceNight} ‚ÇΩ
              </Typography>
            </Grid>
          </Grid>
        </Grid>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <Grid item xs={12}>
          <Divider sx={{ my: 2 }} />
          <Typography variant="h6" gutterBottom>
            –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
          </Typography>
          <Grid container spacing={2}>
            <Grid item xs={12} sm={6}>
              <Typography variant="subtitle1">
                <strong>–ì–æ—Ä–æ–¥:</strong> {profile.city?.name}
              </Typography>
            </Grid>
            {profile.district && (
              <Grid item xs={12} sm={6}>
                <Typography variant="subtitle1">
                  <strong>–†–∞–π–æ–Ω:</strong> {profile.district}
                </Typography>
              </Grid>
            )}
            <Grid item xs={12} sm={6}>
              <Typography variant="subtitle1">
                <strong>–ú–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∏:</strong>
                {profile.inCall && ' –£ —Å–µ–±—è'}
                {profile.outCall && ' –í—ã–µ–∑–¥'}
              </Typography>
            </Grid>
            <Grid item xs={12} sm={6}>
              <Typography variant="subtitle1">
                <strong>–°—Ç–∞—Ç—É—Å:</strong>
                {profile.isVerified && ' ‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–∞—è'}
                {profile.isNew && ' üÜï –ù–æ–≤–µ–Ω—å–∫–∞—è'}
                {profile.isWaitingCall && ' üìû –ñ–¥—ë—Ç –∑–≤–æ–Ω–∫–∞'}
                {profile.is24Hours && ' ‚è∞ –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ'}
              </Typography>
            </Grid>
          </Grid>
        </Grid>
      </Grid>
    </Paper>
  );
};

export default ProfileView; 